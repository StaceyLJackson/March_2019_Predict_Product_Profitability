testSet <- readyData2[-training_indices,]
lmModel <- lm(formula = Volume~.,data=trainSet)
summary(lmModel)
rfe(readyData2[,1:22],ExistingProductAttributes3[,23],sizes=c(1:23),rfeControl = control)
rfe(readyData2[,1:22],readyData2[,23],sizes=c(1:23),rfeControl = control)
control <- rfeControl(functions=rfFuncs,method="cv",number=10)
results <- rfe(readyData2[,1:22],readyData2[,23],sizes=c(1:23),rfeControl = control)
print(results)
fitControl<-trainControl(method="repeatedcv",number = 10,repeats=1)
KNNfit1<-train(Volume~.,data=trainSet,method="knn",trControl=fitControl,preProcess = c("center","scale"), tuneLength=20)
plot(readyData2$Volume, fitted(lmModel))
plot(lmModel)
names(readyData2)
names(readyData2)
readyData3 <- readyData2[-c(4,12)]
names(readyData2)
readyData3 <- readyData2[-c(4,12)]
trainSize2 <- round(nrow(readyData3)*0.7)
testSize2 <- nrow(readyData3)-trainSize2
trainSize2
set.seed(123)
training_indices <- sample(seq_len(nrow(readyData3)),size = trainSize2)
trainSet2<-readyData3[training_indices,]
testSet2 <- readyData3[-training_indices,]
lmModel2 <- lm(formula = Volume~.,data=trainSet2)
summary(lmModel2)
plot(lmModel2)
control <- rfeControl(functions=rfFuncs,method="cv",number=10)
results <- rfe(readyData3[,1:22],readyData3[,23],sizes=c(1:23),rfeControl = control)
readyData3 <- readyData2[-c(4,12)]
names(readyData3)
trainSize2 <- round(nrow(readyData3)*0.7)
testSize2 <- nrow(readyData3)-trainSize2
trainSize2
set.seed(123)
training_indices <- sample(seq_len(nrow(readyData3)),size = trainSize2)
trainSet2<-readyData3[training_indices,]
testSet2 <- readyData3[-training_indices,]
lmModel2 <- lm(formula = Volume~.,data=trainSet2)
summary(lmModel2)
control <- rfeControl(functions=rfFuncs,method="cv",number=10)
results <- rfe(readyData3[,1:20],readyData3[,21],sizes=c(1:21),rfeControl = control)
print(results)
fitControl<-trainControl(method="repeatedcv",number = 10,repeats=1)
KNNfit1<-train(Volume~.,data=trainSet2,method="knn",trControl=fitControl,preProcess = c("center","scale"), tuneLength=20)
lmModel <- lm(formula = Volume~.,data=trainSet)
summary(lmModel)
fitControl<-trainControl(method="repeatedcv",number = 10,repeats=1)
KNNfit1<-train(Volume~.,data=trainSet2,method="knn",trControl=fitControl,preProcess = c("center","scale"), tuneLength=20)
KNNfit1
varImp(KNNfit1)
KNNfit1$bestTune
prediction1<-predict(KNNfit1,testSet)
postResample(pred = prediction1,obs=testSet$Volume)
fitControl<-trainControl(method="repeatedcv",number = 10,repeats=1)
KNNfit1<-train(Volume~.,data=trainSet2,method="knn",trControl=fitControl,preProcess = c("center","scale"), tuneLength=20)
KNNfit1
varImp(KNNfit1)
KNNfit1$bestTune
prediction1<-predict(KNNfit1,testSet)
postResample(pred = prediction1,obs=testSet$Volume)
prediction1
fitControl<-trainControl(method="repeatedcv",number = 10,repeats=1)
KNNfit1<-train(Volume~.,data=trainSet2,method="knn",trControl=fitControl,preProcess = c("center","scale"), tuneLength=20)
KNNfit1
varImp(KNNfit1)
KNNfit1$bestTune
prediction1<-predict(KNNfit1,testSet2)
postResample(pred = prediction1,obs=testSet2$Volume)
prediction1
rfGrid<-expand.grid(mtry=c(1,2,3,4,5))
rfFit1<-train(Volume~.,data=trainSet2,method="rf",trControl=fitControl,tuneGrid=rfGrid)
rfFit1
varImp(rfFit1)
svm_Linear <- train(Volume ~., data = trainSet2, method = "svmLinear", trControl=fitControl, preProcess = c("center", "scale"), tuneLength = 10)
svm_Linear
varImp(svm_Linear)
svm_Linear$bestTune
prediction3<-predict(svm_Linear,testSet2)
postResample(pred = prediction3,obs=testSet2$Volume)
prediction3
fitControl<-trainControl(method="repeatedcv",number = 10,repeats=1)
KNNfit1<-train(Volume~.,data=trainSet2,method="knn",trControl=fitControl,preProcess = c("center","scale"), tuneLength=20)
KNNfit1
varImp(KNNfit1)
KNNfit1$bestTune
prediction1<-predict(KNNfit1,testSet2)
postResample(pred = prediction1,obs=testSet2$Volume)
prediction1
plot(KKNfit1)
fitControl<-trainControl(method="repeatedcv",number = 10,repeats=1)
KNNfit1<-train(Volume~.,data=trainSet2,method="knn",trControl=fitControl,preProcess = c("center","scale"), tuneLength=20)
KNNfit1
varImp(KNNfit1)
KNNfit1$bestTune
prediction1<-predict(KNNfit1,testSet2)
postResample(pred = prediction1,obs=testSet2$Volume)
prediction1
rfGrid<-expand.grid(mtry=c(1,2,3,4,5))
rfFit1<-train(Volume~.,data=trainSet2,method="rf",trControl=fitControl,tuneGrid=rfGrid)
rfFit1
rfFit1$bestTune
prediction2<-predict(rfFit1,testSet2)
postResample(pred = prediction2,obs=testSet2$Volume)
prediction2
mean(lmModel$residuals)
cor(lmModel$residuals$readyData3$Volume)
cor(lmModel$residuals,readyData3$Volume)
fitControl<-trainControl(method="repeatedcv",number = 10,repeats=1)
KNNfit1<-train(Volume~.,data=trainSet2,method="knn",trControl=fitControl,preProcess = c("center","scale"), tuneLength=20)
KNNfit1
varImp(KNNfit1)
KNNfit1$bestTune
fitControl<-trainControl(method="repeatedcv",number = 10,repeats=1)
KNNfit1<-train(Volume~.,data=trainSet2,method="knn",trControl=fitControl,preProcess = c("center","scale"), tuneLength=20)
KNNfit1
varImp(KNNfit1)
KNNfit1$bestTune
prediction1<-predict(KNNfit1,testSet2)
postResample(pred = prediction1,obs=testSet2$Volume)
prediction1
varImp(rfFit1)
rfGrid<-expand.grid(mtry=c(1,2,3,4,5))
rfFit1<-train(Volume~.,data=trainSet2,method="rf",trControl=fitControl,tuneGrid=rfGrid)
rfFit1
rfFit1$bestTune
#varImp(rfFit1)
prediction2<-predict(rfFit1,testSet2)
postResample(pred = prediction2,obs=testSet2$Volume)
prediction2
control <- rfeControl(functions=rfFuncs,method="cv",number=10)
results <- rfe(readyData3[,1:20],readyData3[,21],sizes=c(1:21),rfeControl = control)
print(results)
predictlmModel<-predict(lmModel,testSet)
predictlmModel
predictlmModel2<-predict(lmModel2,testSet2)
predictlmModel2
fitControl<-trainControl(method="repeatedcv",number = 10,repeats=1)
KNNfit1<-train(Volume~.,data=trainSet,method="knn",trControl=fitControl,preProcess = c("center","scale"), tuneLength=20)
KNNfit1
varImp(KNNfit1)
KNNfit1$bestTune
prediction1<-predict(KNNfit1,testSet)
postResample(pred = prediction1,obs=testSet$Volume)
prediction1
findCorrelation(corrData, cutoff = .90, verbose = FALSE)
findCorrelation(corrData, cutoff = .90, verbose = TRUE)
names(readyData)
fitControl<-trainControl(method="repeatedcv",number = 10,repeats=1)
KNNfit1<-train(Volume~.,data=trainSet,method="knn",trControl=fitControl,preProcess = c("center","scale"), tuneLength=20)
KNNfit1
varImp(KNNfit1)
KNNfit1$bestTune
prediction1<-predict(KNNfit1,testSet)
postResample(pred = prediction1,obs=testSet$Volume)
prediction1
readyData3 <- readyData2[-c(4,12)]
names(readyData3)
trainSize2 <- round(nrow(readyData3)*0.7)
testSize2 <- nrow(readyData3)-trainSize2
trainSize2
set.seed(123)
training_indices <- sample(seq_len(nrow(readyData3)),size = trainSize2)
trainSet2<-readyData3[training_indices,]
testSet2 <- readyData3[-training_indices,]
lmModel2 <- lm(formula = Volume~.,data=trainSet2)
summary(lmModel2)
predictlmModel2<-predict(lmModel2,testSet2)
predictlmModel2
readyData3 <- readyData2[-c(1:10,12)]
names(readyData3)
trainSize2 <- round(nrow(readyData3)*0.7)
testSize2 <- nrow(readyData3)-trainSize2
trainSize2
set.seed(123)
training_indices <- sample(seq_len(nrow(readyData3)),size = trainSize2)
trainSet2<-readyData3[training_indices,]
testSet2 <- readyData3[-training_indices,]
lmModel2 <- lm(formula = Volume~.,data=trainSet2)
summary(lmModel2)
predictlmModel2<-predict(lmModel2,testSet2)
predictlmModel2
readyData3 <- readyData2[-c(1:10,12)]
readyData3<-readyData3[-c(1)]
names(readyData3)
trainSize2 <- round(nrow(readyData3)*0.7)
testSize2 <- nrow(readyData3)-trainSize2
trainSize2
set.seed(123)
training_indices <- sample(seq_len(nrow(readyData3)),size = trainSize2)
trainSet2<-readyData3[training_indices,]
testSet2 <- readyData3[-training_indices,]
lmModel2 <- lm(formula = Volume~.,data=trainSet2)
summary(lmModel2)
predictlmModel2<-predict(lmModel2,testSet2)
predictlmModel2
readyData3 <- readyData2[-c(1:10,12)]
readyData3<-readyData3[-c(1)]
names(readyData3)
trainSize2 <- round(nrow(readyData3)*0.7)
testSize2 <- nrow(readyData3)-trainSize2
trainSize2
set.seed(123)
training_indices <- sample(seq_len(nrow(readyData3)),size = trainSize2)
trainSet2<-readyData3[training_indices,]
testSet2 <- readyData3[-training_indices,]
lmModel2 <- lm(formula = Volume~.,data=trainSet2)
summary(lmModel2)
predictlmModel2<-predict(lmModel2,testSet2)
predictlmModel2
plot(lmModel2)
control <- rfeControl(functions=rfFuncs,method="cv",number=10)
results <- rfe(readyData3[,1:20],readyData3[,21],sizes=c(1:21),rfeControl = control)
control <- rfeControl(functions=rfFuncs,method="cv",number=10)
results <- rfe(readyData3[,1:10],readyData3[,11],sizes=c(1:11),rfeControl = control)
print(results)
fitControl<-trainControl(method="repeatedcv",number = 10,repeats=1)
KNNfit1<-train(Volume~.,data=trainSet,method="knn",trControl=fitControl,preProcess = c("center","scale"), tuneLength=20)
KNNfit1
varImp(KNNfit1)
KNNfit1$bestTune
prediction1<-predict(KNNfit1,testSet)
postResample(pred = prediction1,obs=testSet$Volume)
prediction1
fitControl<-trainControl(method="repeatedcv",number = 10,repeats=1)
KNNfit1<-train(Volume~.,data=trainSet2,method="knn",trControl=fitControl,preProcess = c("center","scale"), tuneLength=20)
KNNfit1
varImp(KNNfit1)
KNNfit1$bestTune
prediction1<-predict(KNNfit1,testSet2)
postResample(pred = prediction1,obs=testSet2$Volume)
prediction1
readyData2 <- readyData[-c(13,15,17,19)]
trainSize <- round(nrow(readyData2)*0.7)
testSize <- nrow(readyData2)-trainSize
trainSize
set.seed(123)
training_indices <- sample(seq_len(nrow(readyData2)),size = trainSize)
trainSet<-readyData2[training_indices,]
testSet <- readyData2[-training_indices,]
lmModel <- lm(formula = Volume~.,data=trainSet)
summary(lmModel)
predictlmModel<-predict(lmModel,testSet)
predictlmModel
readyData3 <- readyData2[-c(1:10,12)]
readyData3<-readyData3[-c(1)]
names(readyData3)
trainSize2 <- round(nrow(readyData3)*0.7)
testSize2 <- nrow(readyData3)-trainSize2
trainSize2
set.seed(123)
training_indices <- sample(seq_len(nrow(readyData3)),size = trainSize2)
trainSet2<-readyData3[training_indices,]
testSet2 <- readyData3[-training_indices,]
lmModel2 <- lm(formula = Volume~.,data=trainSet2)
summary(lmModel2)
predictlmModel2<-predict(lmModel2,testSet2)
predictlmModel2
plot(lmModel2)
control <- rfeControl(functions=rfFuncs,method="cv",number=10)
results <- rfe(readyData3[,1:11],readyData3[,12],sizes=c(1:12),rfeControl = control)
print(results)
fitControl<-trainControl(method="repeatedcv",number = 10,repeats=1)
KNNfit1<-train(Volume~.,data=trainSet2,method="knn",trControl=fitControl,preProcess = c("center","scale"), tuneLength=20)
KNNfit1
varImp(KNNfit1)
KNNfit1$bestTune
prediction1<-predict(KNNfit1,testSet2)
postResample(pred = prediction1,obs=testSet2$Volume)
prediction1
rfGrid<-expand.grid(mtry=c(1,2,3,4,5))
rfFit1<-train(Volume~.,data=trainSet2,method="rf",trControl=fitControl,tuneGrid=rfGrid)
rfFit1
rfFit1$bestTune
#varImp(rfFit1)
prediction2<-predict(rfFit1,testSet2)
postResample(pred = prediction2,obs=testSet2$Volume)
prediction2
svm_Linear <- train(Volume ~., data = trainSet2, method = "svmLinear", trControl=fitControl, preProcess = c("center", "scale"), tuneLength = 10)
svm_Linear
varImp(svm_Linear)
svm_Linear$bestTune
prediction3<-predict(svm_Linear,testSet2)
postResample(pred = prediction3,obs=testSet2$Volume)
prediction3
lmModel <- lm(formula = Volume~.,data=trainSet)
summary(lmModel)
control <- rfeControl(functions=rfFuncs,method="cv",number=5)
results <- rfe(readyData3[,1:11],readyData3[,12],sizes=c(1:12),rfeControl = control)
print(results)
fitControl<-trainControl(method="repeatedcv",number = 5,repeats=1)
KNNfit1<-train(Volume~.,data=trainSet2,method="knn",trControl=fitControl,preProcess = c("center","scale"), tuneLength=20)
KNNfit1
varImp(KNNfit1)
KNNfit1$bestTune
prediction1<-predict(KNNfit1,testSet2)
postResample(pred = prediction1,obs=testSet2$Volume)
prediction1
fitControl<-trainControl(method="repeatedcv",number = 5,repeats=1)
KNNfit1<-train(Volume~.,data=trainSet2,method="knn",trControl=fitControl,preProcess = c("center","scale"), tuneLength=20)
KNNfit1
varImp(KNNfit1)
KNNfit1$bestTune
prediction1<-predict(KNNfit1,testSet2)
postResample(pred = prediction1,obs=testSet2$Volume)
fitControl<-trainControl(method="repeatedcv",number = 5,repeats=1)
KNNfit1<-train(Volume~.,data=trainSet2,method="knn",trControl=fitControl,preProcess = c("center","scale"), tuneLength=20)
KNNfit1
varImp(KNNfit1)
KNNfit1$bestTune
prediction1<-predict(KNNfit1,testSet2)
postResample(pred = prediction1,obs=testSet2$Volume)
rfGrid<-expand.grid(mtry=c(1,2,3,4,5))
rfFit1<-train(Volume~.,data=trainSet2,method="rf",trControl=fitControl,tuneGrid=rfGrid)
rfFit1
rfFit1$bestTune
#varImp(rfFit1)
prediction2<-predict(rfFit1,testSet2)
postResample(pred = prediction2,obs=testSet2$Volume)
prediction2
rfGrid<-expand.grid(mtry=c(1,2,3,4,5))
rfFit1<-train(Volume~.,data=trainSet2,method="rf",trControl=fitControl,tuneGrid=rfGrid)
rfFit1
rfFit1$bestTune
varImp(rfFit1)
rfGrid<-expand.grid(mtry=c(1,2,3,4,5))
rfFit1<-train(Volume~.,data=trainSet2,method="rf",trControl=fitControl,tuneGrid=rfGrid,importance=TRUE)
rfFit1
rfFit1$bestTune
varImp(rfFit1)
prediction2<-predict(rfFit1,testSet2)
postResample(pred = prediction2,obs=testSet2$Volume)
prediction2
svm_Linear <- train(Volume ~PositiveServiceReview, data = trainSet2, method = "svmLinear", trControl=fitControl, preProcess = c("center", "scale"), tuneLength = 10)
svm_Linear
varImp(svm_Linear)
svm_Linear$bestTune
prediction4<-predict(svm_Linear,testSet2)
postResample(pred = prediction4,obs=testSet2$Volume)
prediction4
svm_Linear <- train(Volume ~PositiveServiceReview + x4StarReviews, data = trainSet2, method = "svmLinear", trControl=fitControl, preProcess = c("center", "scale"), tuneLength = 10)
svm_Linear
varImp(svm_Linear)
svm_Linear$bestTune
prediction4<-predict(svm_Linear,testSet2)
postResample(pred = prediction4,obs=testSet2$Volume)
prediction4
svm_Linear <- train(Volume ~PositiveServiceReview + x4StarReviews, data = trainSet2, method = "svmLinear", trControl=fitControl, preProcess = c("center", "scale"), tuneLength = 10)
svm_Linear
varImp(svm_Linear)
svm_Linear$bestTune
prediction5<-predict(svm_Linear,testSet2)
postResample(pred = prediction5,obs=testSet2$Volume)
prediction5
svm_Linear <- train(Volume ~PositiveServiceReview + x4StarReviews + NegativeServiceReview, data = trainSet2, method = "svmLinear", trControl=fitControl, preProcess = c("center", "scale"), tuneLength = 10)
svm_Linear
varImp(svm_Linear)
svm_Linear$bestTune
prediction6<-predict(svm_Linear,testSet2)
postResample(pred = prediction6,obs=testSet2$Volume)
prediction6
svm_Linear <- train(Volume ~PositiveServiceReview + x4StarReviews + NegativeServiceReview, data = trainSet2, method = "svmLinear", trControl=fitControl, preProcess = c("center", "scale"), tuneLength = 10)
svm_Linear
varImp(svm_Linear)
svm_Linear$bestTune
prediction6<-predict(svm_Linear,testSet2)
postResample(pred = prediction6,obs=testSet2$Volume)
prediction6
newDataFrame<-dummyVars("~.",data=NewProductAttributes)
NewProductAttributes2 <- data.frame(predict(newDataFrame,newdata = ExistingProductAttributes))
NewProductAttributes2<-NewProductAttributes[-c()]
names(NewProductAttributes2)
newDataFrame<-dummyVars("~.",data=NewProductAttributes)
NewProductAttributes2 <- data.frame(predict(newDataFrame,newdata = ExistingProductAttributes))
names(NewProductAttributes2)
NewProductAttributes2<-NewProductAttributes2[-c(1:13,15,17,19,23)]
finalPred<-predict(svm_Linear,NewProductAttributes2)
finalPred
newDataFrame<-dummyVars("~.",data=NewProductAttributes)
NewProductAttributes2 <- data.frame(predict(newDataFrame,newdata = NewProductAttributes))
names(NewProductAttributes2)
NewProductAttributes2<-NewProductAttributes2[-c(1:13,15,17,19,23)]
finalPred<-predict(svm_Linear,NewProductAttributes2)
finalPred
svm_Linear <- train(Volume ~PositiveServiceReview + x4StarReviews, data = trainSet2, method = "svmLinear", trControl=fitControl, preProcess = c("center", "scale"), tuneLength = 10)
svm_Linear
varImp(svm_Linear)
svm_Linear$bestTune
prediction5<-predict(svm_Linear,testSet2)
postResample(pred = prediction5,obs=testSet2$Volume)
prediction5
plot(svm_Linear)
svm_Linear <- train(Volume ~PositiveServiceReview + x4StarReviews, data = trainSet2, method = "svmLinear", trControl=fitControl, preProcess = c("center", "scale"), tuneLength = 10)
svm_Linear
varImp(svm_Linear)
svm_Linear$bestTune
prediction5<-predict(svm_Linear,testSet2)
postResample(pred = prediction5,obs=testSet2$Volume)
prediction5
plot(svm_Linear,trainSet2)
svm_Linear <- train(Volume ~PositiveServiceReview, data = trainSet2, method = "svmLinear", trControl=fitControl, preProcess = c("center", "scale"), tuneLength = 10)
svm_Linear
varImp(svm_Linear)
svm_Linear$bestTune
prediction4<-predict(svm_Linear,testSet2)
postResample(pred = prediction4,obs=testSet2$Volume)
prediction4
p <- ggplot(data = gapminder, mapping = aes(x = PositiveServiceReview, y = Volume))
p <- ggplot(data = readyData3, mapping = aes(x = PositiveServiceReview, y = Volume))
p + geom_point() +
geom_smooth(method = "loess")
svm_Linear <- train(Volume ~PositiveServiceReview, data = trainSet2, method = "svmLinear", trControl=fitControl, preProcess = c("center", "scale"), tuneLength = 10)
svm_Linear
varImp(svm_Linear)
svm_Linear$bestTune
prediction4<-predict(svm_Linear,testSet2)
postResample(pred = prediction4,obs=testSet2$Volume)
prediction4
svm_Linear <- train(Volume ~PositiveServiceReview, data = trainSet2, method = "svmLinear", trControl=fitControl, preProcess = c("center", "scale"), tuneLength = 10)
svm_Linear
varImp(svm_Linear)
svm_Linear$bestTune
prediction4<-predict(svm_Linear,testSet2)
postResample(pred = prediction4,obs=testSet2$Volume)
prediction4
plot(svm_Linear,readyData3)
plot(svm_Linear,readyData3, svSymbol = 1, dataSymbol = 2, symbolPalette = rainbow(4),
color.palette = terrain.colors))
plot(svm_Linear,readyData3, svSymbol = 1, dataSymbol = 2, symbolPalette = rainbow(4),
color.palette = terrain.colors)
plot(svm_Linear,data=trainSet2)
plot(svm_Linear,trainSet2)
svmLinear<-train(Volume ~PositiveServiceReview, data = trainSet2, method = "svmLinear", cost=1)
plot(svmLinear,trainSet2)
svmLinear<-svm(Volume ~PositiveServiceReview, data = trainSet2, kernel="linear", cost=1)
```{r}
library(e1071)
svm_Linear <- train(Volume ~PositiveServiceReview, data = trainSet2, method = "svmLinear", trControl=fitControl, preProcess = c("center", "scale"), tuneLength = 10)
svm_Linear
varImp(svm_Linear)
svm_Linear$bestTune
prediction4<-predict(svm_Linear,testSet2)
postResample(pred = prediction4,obs=testSet2$Volume)
prediction4
svmLinear<-svm(Volume ~PositiveServiceReview, data = trainSet2, kernel="linear", cost=1)
plot(svmLinear,trainSet2)
svmLinear<-svm(Volume ~PositiveServiceReview, data = trainSet2, kernel="linear", cost=1)
svmLinear_plot<-plot(svmLinear,trainSet2)
svmLinear_plot
library(e1071)
svm_Linear <- train(Volume ~PositiveServiceReview, data = trainSet2, method = "svmLinear", trControl=fitControl, preProcess = c("center", "scale"), tuneLength = 10)
svm_Linear
varImp(svm_Linear)
svm_Linear$bestTune
prediction4<-predict(svm_Linear,testSet2)
postResample(pred = prediction4,obs=testSet2$Volume)
prediction4
svmLinear<-svm(Volume ~PositiveServiceReview, data = trainSet2, kernel="linear", cost=1)
svmLinear_plot<-plot(svmLinear,trainSet2)
svmLinear_plot
library(e1071)
svmLinear<-svm(Volume ~PositiveServiceReview, data = trainSet2, kernel="linear", cost=1)
svmLinear_plot<-plot(svmLinear,trainSet2)
svmLinear_plot
library(e1071)
svmLinear<-svm(Volume ~PositiveServiceReview, data = trainSet2, kernel="linear", cost=1)
plot(svmLinear,trainSet2)
library(e1071)
svmLinear<-svm(Volume ~PositiveServiceReview, data = trainSet2, kernel="linear", cost=1)
plot(svmLinear,trainSet2)
svm_Linear <- train(Volume ~PositiveServiceReview, data = trainSet2, method = "svmLinear", trControl=fitControl, preProcess = c("center", "scale"), tuneLength = 10)
svm_Linear
varImp(svm_Linear)
svm_Linear$bestTune
prediction4<-predict(svm_Linear,testSet2)
postResample(pred = prediction4,obs=testSet2$Volume)
prediction4
library(e1071)
svmLinear<-svm(Volume ~PositiveServiceReview, data = trainSet2, kernel="linear", cost=1)
plot(svmLinear,trainSet2)
plot(svmLinear,trainSet2)
plot(readyData3$Volume,prediction5)
svm_Linear <- train(Volume ~PositiveServiceReview + x4StarReviews + NegativeServiceReview, data = trainSet2, method = "svmLinear", trControl=fitControl, preProcess = c("center", "scale"), tuneLength = 10)
svm_Linear
varImp(svm_Linear)
svm_Linear$bestTune
prediction6<-predict(svm_Linear,testSet2)
postResample(pred = prediction6,obs=testSet2$Volume)
prediction6
errorMetrics <- function(predictedValues, actualValues) {
absoluteError <- prediction6 - testSet$Volume
square_error <- absoluteError * absoluteError
data.frame(absoluteError, square_error)
}
errorMetrics <- function(predictedValues, actualValues) {
absoluteError <- prediction6 - testSet$Volume
square_error <- absoluteError * absoluteError
data.frame(absoluteError, square_error)
}
errorMetrics
svm_Linear <- train(Volume ~PositiveServiceReview + x4StarReviews + NegativeServiceReview, data = trainSet2, method = "svmLinear", trControl=fitControl, preProcess = c("center", "scale"), tuneLength = 10)
svm_Linear
varImp(svm_Linear)
svm_Linear$bestTune
prediction6<-predict(svm_Linear,testSet2)
postResample(pred = prediction6,obs=testSet2$Volume)
prediction6
errorMetrics <- function(predictedValues, actualValues) {
absoluteError <- prediction6 - testSet$Volume
square_error <- absoluteError * absoluteError
data.frame(absoluteError, square_error)
}
